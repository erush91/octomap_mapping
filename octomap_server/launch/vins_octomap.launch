<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->
<launch>

        <node pkg="topic_tools" name="pcl_throttle" type="throttle" args="messages depth/depth_registered/points 3 rs_pcl_throttled" />

        <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

        <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
        <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
            <remap from="~input" to="/rs_pcl_throttled" />
            <rosparam>
              filter_field_name: z
              filter_limit_min: 0.2
              filter_limit_max: 5.0
              filter_limit_negative: False
              leaf_size: 0.1
            </rosparam>
        </node>

	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.1" />

		<param name="publish_free_space" value="true"/>

		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="world" />

		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="5.0" />
		<param name="sensor_model/min_range" value="0.2" />

		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/voxel_grid/output" />
		<param name="filter_speckles" type="bool" value="true" />
	</node>

<include file="$(find octomap_server)/launch/pcl_outlier_removal.launch" />
</launch>
